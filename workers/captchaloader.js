(()=>{"use strict";var e={n:r=>{var t=r&&r.__esModule?()=>r.default:()=>r;return e.d(t,{a:t}),t},d:(r,t)=>{for(var a in t)e.o(t,a)&&!e.o(r,a)&&Object.defineProperty(r,a,{enumerable:!0,get:t[a]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r)};const r=require("fs");var t=e.n(r);const a=require("path");var o=e.n(a);const n=require("ppfun-captcha");var s=e.n(n);const i=require("worker_threads"),c="captchaFonts";if(i.isMainThread)throw new Error("Tilewriter is run as a worker thread, not as own process");const d=t().readdirSync(o().resolve(__dirname,"..",c)).filter((e=>e.endsWith(".ttf"))).map((e=>s().loadFont(o().resolve(__dirname,"..",c,e))));i.parentPort.on("message",(e=>{try{if("createCaptcha"===e){const e=s().create({width:500,height:300,fontSize:180,stroke:"black",fill:"none",nodeDeviation:2.5,connectionPathDeviation:10,style:"stroke-width: 4;",background:"#EFEFEF",font:d}),r=Math.random().toString(36).substring(2,15);i.parentPort.postMessage([null,e.text,e.data,r])}}catch(e){console.warn(`Captchas: Error on createCaptcha: ${e.message}`),i.parentPort.postMessage(["Failure!"])}}))})();